->now at this point we know how to store data using database in a container 
-> we also know some networking in container they two container on same network can talk to each other or interact 
-> but we have to write a lot of commands in the terminal of docker just to get things up and runnig 
-> this will become a tough task while working in the production or project
-> bcoz in this demo case there was just one container 
-> but in reality there will be thousands of container running in the production team
->you cannot to each container and start them , stop them, give them network commands or other stuff at one time.
-> so you need some sort of automation thing to change stuff at every container.

--------------------------------------------------------
->that is where Docker-compose comes into picture
-> But, there’s a good chance you are starting to feel a little overwhelmed with everything you need to do to start up this application. We have to create a network, start containers, specify all of the environment variables, expose ports, and more! That’s a lot to remember and it’s certainly making things harder to pass along to someone else.

In the next section, we’ll talk about Docker Compose. With Docker Compose, we can share our application stacks in a much easier way and let others spin them up with a single (and simple) command!
--------------------------------------------------------------------------

-> to start the docker-compose application after writing the yaml configuration use this simle command: 
: docker compose up -d
-> hen you’re ready to tear it all down, simply run docker compose down or hit the trash can on the Docker Dashboard for the entire app. The containers will stop and the network will be removed.

    Warning

    Removing Volumes

    By default, named volumes in your compose file are NOT removed when running docker compose down. If you want to remove the volumes, you will need to add the --volumes flag.

    The Docker Dashboard does not remove volumes when you delete the app stack.

Once torn down, you can switch to another project, run docker compose up and be ready to contribute to that project! It really doesn’t get much simpler than that!

